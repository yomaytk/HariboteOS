     1                                  BOTPAK  EQU    0x00280000    ; BOOTPACK     | bootpackのロード先
     2                                  DSKCAC  EQU    0x00100000    ; DISK CACHE   | ディスクキャッシュの場所
     3                                  DSKCAC0 EQU    0x00008000    ; DISK CACHE 0 | ディスクキャッシュの場所（リアルモード）
     4                                  
     5                                  ; BOOT_INFO関係
     6                                  ; > メモしている場所は0x0ff0番地周辺ですが、メモリマップによるとこのへんも誰にも使われていないようでした
     7                                  CYLS    EQU     0x0ff0      ; ブートセクタが設定する
     8                                  LEDS    EQU     0x0ff1      ; LED STATE
     9                                  VMODE   EQU     0x0ff2      ; VIDEO MODE | 色数に関する情報（何ビットカラーか）
    10                                  SCRNX   EQU     0x0ff4      ; SCREEN X   | 解像度X
    11                                  SCRNY   EQU     0x0ff6      ; SCREEN Y   | 解像度Y
    12                                  VRAM    EQU     0x0ff8      ; VIDEO RAM  | グラフィックバッファの開始番地
    13                                  
    14                                          ;=======================================================================
    15                                          ORG     0xc200      ; 0xc200 = 0x8000 + 0x4200
    16                                                              ; イメージファイルの 0x4200 アドレス番目に書き込まれている
    17                                                              ; また,先で 0x8000 以降を使うことに決めている
    18                                  
    19                                          ;=======================================================================
    20                                          ; [INT(0x10); ビデオ関係](http://oswiki.osask.jp/?%28AT%29BIOS#n5884802)
    21                                          ; ビデオモード設定
    22                                          ;   AH = 0x00;
    23                                          ;   AL = モード： (マイナーな画面モードは省略しています)
    24                                          ;     0x03：16色テキスト、80x25
    25                                          ;     0x12：VGAグラフィックス、640x480x4bitカラー、独自プレーンアクセス
    26                                          ;     0x13：VGAグラフィックス、320x200x8bitカラー、パックドピクセル
    27                                          ;     0x6a：拡張VGAグラフィックス、800x600x4bitカラー、独自プレーンアクセス（ビデオカードによってはサポートされない）
    28                                          ;   戻り値：なし
    29                                  VBEMODE	EQU		0x105			; 1024 x  768 x 8bitカラー
    30                                  ; （画面モード一覧）
    31                                  ;	0x100 :  640 x  400 x 8bitカラー
    32                                  ;	0x101 :  640 x  480 x 8bitカラー
    33                                  ;	0x103 :  800 x  600 x 8bitカラー
    34                                  ;	0x105 : 1024 x  768 x 8bitカラー
    35                                  ;	0x107 : 1280 x 1024 x 8bitカラー
    36                                  
    37                                  ; VBE存在確認
    38 00000000 EB64                    		JMP		scrn320
    39 00000002 B80090                  		MOV		AX,0x9000
    40 00000005 8EC0                    		MOV		ES,AX
    41 00000007 BF0000                  		MOV		DI,0
    42 0000000A B8004F                  		MOV		AX,0x4f00
    43 0000000D CD10                    		INT		0x10
    44 0000000F 83F84F                  		CMP		AX,0x004f
    45 00000012 7552                    		JNE		scrn320
    46                                  
    47                                  ; VBEのバージョンチェック
    48                                  
    49 00000014 268B4504                		MOV		AX,[ES:DI+4]
    50 00000018 3D0002                  		CMP		AX,0x0200
    51 0000001B 7249                    		JB		scrn320			; if (AX < 0x0200) goto scrn320
    52                                  
    53                                  ; 画面モード情報を得る
    54                                  
    55 0000001D B90501                  		MOV		CX,VBEMODE
    56 00000020 B8014F                  		MOV		AX,0x4f01
    57 00000023 CD10                    		INT		0x10
    58 00000025 83F84F                  		CMP		AX,0x004f
    59 00000028 753C                    		JNE		scrn320
    60                                  
    61                                  ; 画面モード情報の確認
    62                                  
    63 0000002A 26807D1908              		CMP		BYTE [ES:DI+0x19],8
    64 0000002F 7535                    		JNE		scrn320
    65 00000031 26807D1B04              		CMP		BYTE [ES:DI+0x1b],4
    66 00000036 752E                    		JNE		scrn320
    67 00000038 268B05                  		MOV		AX,[ES:DI+0x00]
    68 0000003B 258000                  		AND		AX,0x0080
    69 0000003E 7426                    		JZ		scrn320			; モード属性のbit7が0だったのであきらめる
    70                                  
    71                                  ; 画面モードの切り替え
    72                                  
    73 00000040 BB0541                  		MOV		BX,VBEMODE+0x4000
    74 00000043 B8024F                  		MOV		AX,0x4f02
    75 00000046 CD10                    		INT		0x10
    76 00000048 C606F20F08              		MOV		BYTE [VMODE],8	; 画面モードをメモする（C言語が参照する）
    77 0000004D 268B4512                		MOV		AX,[ES:DI+0x12]
    78 00000051 A3F40F                  		MOV		[SCRNX],AX
    79 00000054 268B4514                		MOV		AX,[ES:DI+0x14]
    80 00000058 A3F60F                  		MOV		[SCRNY],AX
    81 0000005B 26668B4528              		MOV		EAX,[ES:DI+0x28]
    82 00000060 66A3F80F                		MOV		[VRAM],EAX
    83 00000064 EB22                    		JMP		keystatus
    84                                  
    85                                  scrn320:
    86 00000066 B013                    		MOV		AL,0x13			; VGAグラフィックス、320x200x8bitカラー
    87 00000068 B400                    		MOV		AH,0x00
    88 0000006A CD10                    		INT		0x10
    89 0000006C C606F20F08              		MOV		BYTE [VMODE],8	; 画面モードをメモする（C言語が参照する）
    90 00000071 C706F40F4001            		MOV		WORD [SCRNX],320
    91 00000077 C706F60FC800            		MOV		WORD [SCRNY],200
    92 0000007D 66C706F80F00000A00      		MOV		DWORD [VRAM],0x000a0000
    93 00000086 EB00                    		JMP		keystatus
    94                                  
    95                                  ; キーボードのLED状態をBIOSに教えてもらう
    96                                  
    97                                  keystatus:
    98 00000088 B402                    		MOV		AH,0x02
    99 0000008A CD16                    		INT		0x16 			; keyboard BIOS
   100 0000008C A2F10F                  		MOV		[LEDS],AL
   101                                  
   102                                  		; MOV		BX,0x4101		; VBEの640x480x8bitカラー
   103                                  		; MOV		AX,0x4f02
   104                                          ; MOV     AL, 0x12    ; VGA graphics, 320x200x(8 bit color)
   105                                          ; MOV     AH, 0x00
   106                                          ; INT     0x10
   107                                  
   108                                          ;=======================================================================
   109                                          ; 画面モードをメモする
   110                                          ; MOV     BYTE [VMODE], 8           ; Video MODE
   111                                          ; MOV     WORD [SCRNX], 640        ; SCReeN X
   112                                          ; MOV     WORD [SCRNY], 480         ; SCReeN Y
   113                                          ; MOV     DWORD [VRAM], 0x000a0000  ; Video RAM
   114                                  										; > VRAMは0xa0000〜0xaffffの64KBです。厳密に言うと、320x200=64000なので、62.5KBですが.
   115                                  										;
   116                                  										; > [VRAM]に 0xa0000 を入れているのですが、PC の世界で VRAM というのはビデオラムのことで
   117                                  										; > 「video RAM」と書き、画面用のメモリのことです。このメモリは、もちろんデータを記憶することがい
   118                                  										; > つも通りできます。しかしVRAMは普通のメモリ以上の存在で、それぞれの番地が画面上の画素に対応
   119                                  										; > していて、これを利用することで画面に絵を出すことができるのです。
   120                                  
   121                                          ;=======================================================================
   122                                          ; [INT(0x16); キーボード関係 - (AT)BIOS - os-wiki](http://oswiki.osask.jp/?%28AT%29BIOS#lb9f3e72)
   123                                          ; キーロック＆シフト状態取得
   124                                          ;   AH = 0x02;
   125                                          ;   戻り値：
   126                                          ;   AL == 状態コード：
   127                                          ;     bit0：右シフト
   128                                          ;     bit1：左シフト
   129                                          ;     bit2：Ctrl
   130                                          ;     bit3：Alt
   131                                          ;     bit4：Scrollロック
   132                                          ;     bit5：Numロック
   133                                          ;     bit6：Capsロック
   134                                          ;     bit7：Insertモード
   135                                          ; BIOS (16 bit mode) から情報を取得
   136                                          ; MOV     AH, 0x02    ; キーロック＆シフト状態取得
   137                                          ; INT     0x16        ; Keyboard BIOS
   138                                          ; MOV     [LEDS], AL  ; LED State
   139                                  
   140                                          ; PICが一切の割り込みを受け付けないようにする
   141                                          ; AT互換機の仕様では、PICの初期化をするなら、
   142                                          ; こいつをCLI前にやっておかないと、たまにハングアップする
   143                                          ; PICの初期化はあとでやる
   144                                  
   145 0000008F B0FF                            MOV     AL, 0xff
   146 00000091 E621                            OUT     0x21, AL
   147 00000093 90                              NOP                   ; OUT命令を連続させるとうまくいかない機種があるらしいので
   148 00000094 E6A1                            OUT     0xa1, AL
   149                                  
   150 00000096 FA                              CLI                   ; さらにCPUレベルでも割り込み禁止
   151                                  
   152                                          ; CPUから1MB以上のメモリにアクセスできるように、A20GATEを設定
   153                                  
   154 00000097 E8B500                          CALL waitkbdout
   155 0000009A B0D1                            MOV  AL,0xd1
   156 0000009C E664                            OUT  0x64,AL
   157 0000009E E8AE00                          CALL waitkbdout
   158 000000A1 B0DF                            MOV  AL,0xdf          ; enable A20
   159 000000A3 E660                            OUT  0x60,AL
   160 000000A5 E8A700                          CALL waitkbdout
   161                                  
   162                                          ; プロテクトモード移行
   163                                          
   164                                          ;[INSTRSET "i486p"]    ; i486の命令まで使いたいという記述
   165                                          ; ここで指定するのではなくgccでcompileする際にi486で指定
   166                                  
   167 000000A8 0F0116[8A01]                    LGDT [GDTR0]   ; 暫定GDTを設定
   168 000000AD 0F20C0                          MOV  EAX,CR0
   169 000000B0 6625FFFFFF7F                    AND  EAX,0x7fffffff ; bit31を0にする（ページング禁止のため）
   170 000000B6 6683C801                        OR  EAX,0x00000001 ; bit0を1にする（プロテクトモード移行のため）
   171 000000BA 0F22C0                          MOV  CR0,EAX
   172 000000BD EB00                            JMP  pipelineflush
   173                                  pipelineflush:
   174 000000BF B80800                          MOV  AX,1*8   ;  読み書き可能セグメント32bit
   175 000000C2 8ED8                            MOV  DS,AX
   176 000000C4 8EC0                            MOV  ES,AX
   177 000000C6 8EE0                            MOV  FS,AX
   178 000000C8 8EE8                            MOV  GS,AX
   179 000000CA 8ED0                            MOV  SS,AX
   180                                  
   181                                          ; bootpackの転送
   182                                  
   183 000000CC 66BE[90010000]                  MOV  ESI,bootpack ; 転送元
   184 000000D2 66BF00002800                    MOV  EDI,BOTPAK  ; 転送先
   185 000000D8 66B900000200                    MOV  ECX,512*1024/4
   186                                          ;MOV  ECX, 131072
   187 000000DE E87500                          CALL memcpy
   188                                  
   189                                          ; ついでにディスクデータも本来の位置へ転送
   190                                  
   191                                          ; まずはブートセクタから
   192                                  
   193 000000E1 66BE007C0000                    MOV  ESI,0x7c00  ; 転送元
   194 000000E7 66BF00001000                    MOV  EDI,DSKCAC  ; 転送先
   195 000000ED 66B980000000                    MOV  ECX,512/4
   196                                          ;MOV  ECX, 128
   197 000000F3 E86000                          CALL memcpy
   198                                  
   199                                          ; 残り全部
   200                                  
   201 000000F6 66BE00820000                    MOV  ESI,DSKCAC0+512 ; 転送元
   202 000000FC 66BF00021000                    MOV  EDI,DSKCAC+512 ; 転送先
   203 00000102 66B900000000                    MOV  ECX,0
   204 00000108 8A0EF00F                        MOV  CL,BYTE [CYLS]
   205 0000010C 6669C900120000                  IMUL ECX,512*18*2/4 ; シリンダ数からバイト数/4に変換
   206                                          ;IMUL ECX, 4608
   207 00000113 6681E980000000                  SUB  ECX,512/4  ; IPLの分だけ差し引く
   208                                          ;SUB  ECX, 128  ; IPLの分だけ差し引く
   209 0000011A E83900                          CALL memcpy
   210                                  
   211                                          ; asmheadでしなければいけないことは全部し終わったので、
   212                                          ; あとはbootpackに任せる
   213                                          
   214                                          ; bootpackの起動
   215                                  
   216 0000011D 66BB00002800                    MOV  EBX,BOTPAK
   217 00000123 66678B4B10                      MOV  ECX,[EBX+16]
   218 00000128 6683C103                        ADD  ECX,3   ; ECX += 3;
   219 0000012C 66C1E902                        SHR  ECX,2   ; ECX /= 4;
   220 00000130 7410                            JZ  skip   ; 転送するべきものがない
   221 00000132 66678B7314                      MOV  ESI,[EBX+20] ; 転送元
   222 00000137 6601DE                          ADD  ESI,EBX
   223 0000013A 66678B7B0C                      MOV  EDI,[EBX+12] ; 転送先
   224 0000013F E81400                          CALL memcpy
   225                                  skip:
   226 00000142 66678B630C                      MOV  ESP,[EBX+12] ; スタック初期値
   227 00000147 66EA1B0000001000                JMP  DWORD 2*8:0x0000001b
   228                                  
   229                                  waitkbdout:
   230 0000014F E464                            IN   AL,0x64
   231 00000151 2402                            AND   AL,0x02
   232                                  		;IN	 AL,0x60			; <- removeした
   233 00000153 75FA                            JNZ  waitkbdout  ; ANDの結果が0でなければwaitkbdoutへ
   234 00000155 C3                              RET
   235                                  
   236                                  memcpy:
   237 00000156 66678B06                        MOV  EAX,[ESI]
   238 0000015A 6683C604                        ADD  ESI,4
   239 0000015E 66678907                        MOV  [EDI],EAX
   240 00000162 6683C704                        ADD  EDI,4
   241 00000166 6683E901                        SUB  ECX,1
   242 0000016A 75EA                            JNZ  memcpy   ; 引き算した結果が0でなければmemcpyへ
   243 0000016C C3                              RET
   244                                          ; memcpyはアドレスサイズプリフィクスを入れ忘れなければ、ストリング命令でも書ける
   245                                  
   246 0000016D <res 00000003>                  ALIGNB 16
   246          ******************       warning: uninitialized space declared in .text section: zeroing
   247                                  GDT0:
   248 00000170 <res 00000008>                  RESB 8    ; ヌルセレクタ
   248          ******************       warning: uninitialized space declared in .text section: zeroing
   249 00000178 FFFF00000092CF00                DW  0xffff,0x0000,0x9200,0x00cf ; 読み書き可能セグメント32bit
   250 00000180 FFFF0000289A4700                DW  0xffff,0x0000,0x9a28,0x0047 ; 実行可能セグメント32bit（bootpack用）
   251                                  
   252 00000188 0000                            DW  0
   253                                  GDTR0:
   254 0000018A 1700                            DW  8*3-1
   255 0000018C [70010000]                      DD  GDT0
   256                                  
   257                                          ALIGNB 16
   258                                  bootpack:
